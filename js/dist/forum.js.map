{"version":3,"sources":["webpack://@fof/byobu/webpack/bootstrap","webpack://@fof/byobu/external \"flarum.core.compat['extend']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/User']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Discussion']\"","webpack://@fof/byobu/external \"flarum.core.compat['Model']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Button']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Group']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Select']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/highlight']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/username']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extract']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/listItems']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/classList']\"","webpack://@fof/byobu/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/byobu/./src/forum/components/sources/UserSearchSource.js","webpack://@fof/byobu/./src/forum/components/sources/GroupSearchSource.js","webpack://@fof/byobu/./src/common/helpers/recipientLabel.js","webpack://@fof/byobu/./src/forum/components/RecipientSearch.js","webpack://@fof/byobu/./src/forum/components/AddRecipientModal.js","webpack://@fof/byobu/./src/common/helpers/recipientCountLabel.js","webpack://@fof/byobu/./src/forum/addRecipientComposer.js","webpack://@fof/byobu/./src/common/helpers/recipientsLabel.js","webpack://@fof/byobu/./src/forum/addRecipientLabels.js","webpack://@fof/byobu/./src/forum/addRecipientsControl.js","webpack://@fof/byobu/./src/forum/addHasRecipientsBadge.js","webpack://@fof/byobu/./src/forum/addDiscussPrivatelyControl.js","webpack://@fof/byobu/./src/forum/addPrivacySetting.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionList.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionsUserPage.js","webpack://@fof/byobu/./src/forum/addPrivateDiscussionsPage.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionIndex.js","webpack://@fof/byobu/./src/forum/components/RecipientsModified.js","webpack://@fof/byobu/./src/forum/index.js","webpack://@fof/byobu/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Search']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/avatar']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Badge']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/UserControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Page']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/WelcomeHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LogInModal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/EventPost']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserSearchSource_UserSearchSource","view","query","_this","this","length","loading","app","cache","byobuResults","className","translator","trans","map","user","username_default","children","highlight_default","data-index","id","avatar_default","store","find","filter","q","page","limit","then","pushResults","results","_this2","payload","data","result","getById","push","redraw","GroupSearchSource_GroupSearchSource","search","toLowerCase","all","group","namePlural","substr","groupName","class","recipientLabel","recipient","attrs","style","label","link","extract_default","User_default","a","title","username","href","route","config","Group_default","RecipientSearch_RecipientSearch","isInitialized","$search","$","on","e","target","addRecipient","focus","parentNode","clearTimeout","typingTimer","doSearch","setTimeout","_Search","sources","sourceItems","toArray","props","selected","onclick","removeRecipient","classList_default","open","focused","active","loadingSources","element","type","placeholder","extractText_default","oninput","withAttr","onfocus","hasFocus","onblur","in","source","LoadingIndicator_default","component","size","items","ItemList_default","discussion","forum","attribute","canEditUserRecipients","add","canEditGroupRecipients","clear","values","split","findRecipient","remove","Search_default","AddRecipientModal_AddRecipientModal","init","_Modal","prop","assignInitialRecipients","selectedRecipients","merge","session","recipientSearch","recipientUsers","recipientGroups","content","Button_default","disabled","icon","select","metaKey","ctrlKey","indexOf","index","submit","onsubmit","preventDefault","recipients","forEach","save","relationships","current","DiscussionPage_default","stream","update","modal","close","strategy","Modal_default","recipientCountLabel","count","transChoice","recipientsLabel","addRecipientsControl","external_flarum_core_compat_extend_","DiscussionControls_default","canEditRecipients","show","addHasRecipientsBadge","Discussion_default","badges","Badge_default","addDiscussPrivatelyControl","UserControls_default","blocksPd","cannotBeDirectMessaged","deferred","DiscussionComposer_default","composer","load","resolve","promise","addPrivacySetting","SettingsPage_default","Switch_default","state","preferences","onchange","preferenceSaver","PrivateDiscussionList_PrivateDiscussionList","DiscussionList_default","PrivateDiscussionsUserPage_PrivateDiscussionsUserPage","_UserPage","loadUser","param","list","params","sort","refresh","render","UserPage_default","addPrivateDiscussionsPage","Number","routes","path","LinkButton_default","PrivateDiscussionIndex_PrivateDiscussionIndex","_Page","previous","lastDiscussion","PrivateDiscussionIndex","privateDiscussionList","keys","some","history","icon_default","bodyClass","onunload","scrollTop","window","hero","listItems_default","sidebarItems","viewItems","actionItems","discussionList","context","apply","arguments","css","setTitle","setTitleCount","oldHeroHeight","heroHeight","outerHeight","height","scroll","$discussion","indexTop","indexBottom","discussionTop","offset","top","discussionBottom","WelcomeHero_default","canStartDiscussion","itemClassName","newDiscussion","SelectDropdown_default","navItems","buttonClassName","stickyParams","sortMap","sortOptions","Select_default","options","changeSort","markAllAsRead","searching","clearSearch","routeName","composeNewDiscussion","LogInModal_default","onlogin","confirm","readTime","Date","Page_default","RecipientsModified_RecipientsModified","initProps","diff","diff1","diff2","item","_EventPost","post","usersAdded","usersRemoved","groupsAdded","groupsRemoved","added","concat","removed","oldRecipients","newRecipients","descriptionKey","localeBase","descriptionData","initializers","private_discussions","external_flarum_core_compat_Model_default","hasMany","oldRecipientUsers","oldRecipientGroups","postComponents","recipientsModified","chooseRecipients","users","groups","addRecipientComposer","addToDiscussion","long","DiscussionListItem_default","include","DiscussionHero_default","addRecipientLabels"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['models/Group'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/classList'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import highlight from 'flarum/helpers/highlight';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport username from 'flarum/helpers/username';\r\n\r\nexport default class UserSearchSource {\r\n    view(query) {\r\n        if (query.length < 3 || this.loading) return;\r\n\r\n        if (!app.cache.byobuResults) {\r\n            app.cache.byobuResults = [];\r\n        }\r\n\r\n        this.query = query;\r\n\r\n        if (!app.cache.byobuResults[this.query]) {\r\n\r\n            this.loading = true;\r\n\r\n            app.cache.byobuResults[this.query] = [];\r\n            app.store.find('users', {\r\n                filter: {q: this.query + ' allows-pd'},\r\n                page: {limit: 5}\r\n            }).then(this.pushResults.bind(this));\r\n        } else\r\n\r\n            return [\r\n                <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\r\n                app.cache.byobuResults[this.query].map(user => {\r\n                    const name = username(user);\r\n                    name.children[0] = highlight(name.children[0], this.query);\r\n\r\n                    return (\r\n                        <li className='SearchResult' data-index={'users:' + user.id()}>\r\n                            <a data-index={'users:' + user.id()}>\r\n                                {avatar(user)}\r\n                                {name}\r\n                            </a>\r\n                        </li>\r\n                    );\r\n                })\r\n            ];\r\n    }\r\n\r\n    pushResults(results) {\r\n        results.payload.data.map(result => {\r\n            var user = app.store.getById('users', result.id);\r\n            app.cache.byobuResults[this.query].push(user);\r\n        });\r\n        this.loading = false;\r\n        m.redraw();\r\n    }\r\n}\r\n","import highlight from 'flarum/helpers/highlight';\r\n\r\nexport default class GroupSearchSource {\r\n    search(query) {\r\n        return app.store.find('groups', {\r\n            filter: {q: query},\r\n            page: {limit: 5}\r\n        });\r\n    }\r\n\r\n    view(query) {\r\n        query = query.toLowerCase();\r\n\r\n        const results = app.store.all('groups')\r\n            .filter(group => group.namePlural().toLowerCase().substr(0, query.length) === query);\r\n\r\n        if (!results.length) return '';\r\n\r\n        return [\r\n            <li className=\"Dropdown-header\">{app.translator.trans('fof-byobu.forum.search.headings.groups')}</li>,\r\n            results.map(group => {\r\n                const groupName = group.namePlural();\r\n                var name = highlight(groupName, query);\r\n\r\n                return (\r\n                    <li className=\"SearchResult\" data-index={'groups:' + group.id()}>\r\n                        <a data-index={'groups:' + group.id()}>\r\n                            <span class=\"groupName\">{name}</span>\r\n                        </a>\r\n                    </li>\r\n                );\r\n            })\r\n        ];\r\n    }\r\n}\r\n","import extract from 'flarum/utils/extract';\r\nimport username from 'flarum/helpers/username';\r\nimport User from 'flarum/models/User';\r\nimport Group from 'flarum/models/Group';\r\n\r\nexport default function recipientLabel(recipient, attrs = {}) {\r\n  attrs.style = attrs.style || {};\r\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\r\n\r\n  const link = extract(attrs, 'link');\r\n\r\n  var label;\r\n\r\n  if (recipient instanceof User) {\r\n      label = username(recipient);\r\n\r\n      if (link) {\r\n          attrs.title = recipient.username() || '';\r\n          attrs.href = app.route.user(recipient);\r\n          attrs.config = m.route;\r\n      }\r\n  } else if (recipient instanceof Group) {\r\n      label = recipient.namePlural();\r\n  } else {\r\n      attrs.className += ' none';\r\n      label = app.translator.trans('fof-byobu.forum.labels.user_deleted');\r\n  }\r\n\r\n  return (\r\n    m((link ? 'a' : 'span'), attrs,\r\n        <span className=\"RecipientLabel-text\">\r\n            {label}\r\n        </span>\r\n    )\r\n  );\r\n}\r\n","import Search from \"flarum/components/Search\";\r\nimport UserSearchSource from \"./sources/UserSearchSource\";\r\nimport GroupSearchSource from \"./sources/GroupSearchSource\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport classList from \"flarum/utils/classList\";\r\nimport extractText from \"flarum/utils/extractText\";\r\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\r\nimport recipientLabel from \"../../common/helpers/recipientLabel\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\n\r\nexport default class RecipientSearch extends Search {\r\n\r\n    config(isInitialized) {\r\n        if (isInitialized) return;\r\n\r\n        const $search = this;\r\n\r\n        this.$('.Search-results').on('click', (e) => {\r\n            const target = this.$('.SearchResult.active')\r\n\r\n            $search.addRecipient(target.data('index'));\r\n            $search.$('.RecipientsInput').focus();\r\n        });\r\n\r\n        this.$('.Search-results').on('touchstart', (e) => {\r\n            const target = this.$(e.target.parentNode);\r\n\r\n            $search.addRecipient(target.data('index'));\r\n            $search.$('.RecipientsInput').focus();\r\n        });\r\n\r\n        $('.RecipientsInput').on('keyup', () => {\r\n            clearTimeout(this.typingTimer);\r\n            this.doSearch = false;\r\n            this.typingTimer = setTimeout(() => {\r\n                this.doSearch = true;\r\n                m.redraw();\r\n            }, 900);\r\n        }).on('keydown', () => {\r\n            clearTimeout(this.typingTimer);\r\n        });\r\n\r\n        super.config(isInitialized);\r\n    }\r\n\r\n    view() {\r\n        if (typeof this.value() === 'undefined') {\r\n            this.value('');\r\n        }\r\n\r\n        const loading = this.value() && this.value().length >= 3;\r\n\r\n        if (!this.sources) {\r\n            this.sources = this.sourceItems().toArray();\r\n        }\r\n\r\n        return m('div', {\r\n            className: 'AddRecipientModal-form-input'\r\n        }, [\r\n            m('div', {\r\n                className: 'RecipientsInput-selected RecipientsLabel'\r\n            }, this.props.selected().toArray().map(recipient =>\r\n                recipientLabel(recipient, {\r\n                    onclick: () => {\r\n                        this.removeRecipient(recipient);\r\n                    }\r\n                })\r\n            )),\r\n            m('input', {\r\n                className: 'RecipientsInput FormControl ' + classList({\r\n                    open: !!this.value(),\r\n                    focused: !!this.value(),\r\n                    active: !!this.value(),\r\n                    loading: !!this.loadingSources\r\n                }),\r\n                config: function (element) {\r\n                    element.focus();\r\n                },\r\n                type: 'search',\r\n                placeholder: extractText(app.translator.trans('fof-byobu.forum.input.search_recipients')),\r\n                value: this.value(),\r\n                oninput: m.withAttr('value', this.value),\r\n                onfocus: () => this.hasFocus = true,\r\n                onblur: () => this.hasFocus = false\r\n            }),\r\n            m('ul', {\r\n                className: 'Dropdown-menu Search-results fade ' + classList({\r\n                    in: !!loading\r\n                })\r\n            }, !this.doSearch\r\n                ? LoadingIndicator.component({size: 'tiny', className: 'Button Button--icon Button--link'})\r\n                : this.sources.map(source => source.view(this.value()))\r\n            )\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Build an item list of SearchSources.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    sourceItems() {\r\n        const items = new ItemList();\r\n\r\n        // Add user source based on permissions.\r\n        if (\r\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithUsers')) ||\r\n            (this.props.discussion && this.props.discussion.canEditUserRecipients())\r\n        ) {\r\n            items.add('users', new UserSearchSource());\r\n        }\r\n\r\n        // Add group source based on permissions.\r\n        if (\r\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithGroups')) ||\r\n            (this.props.discussion && this.props.discussion.canEditGroupRecipients())\r\n        ) {\r\n            items.add('groups', new GroupSearchSource());\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n\r\n    /**\r\n     * Clear the search input and the current controller's active search.\r\n     */\r\n    clear() {\r\n        this.value('');\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    /**\r\n     * Adds a recipient.\r\n     *\r\n     * @param value\r\n     */\r\n    addRecipient(value) {\r\n\r\n        let values = value.split(':'),\r\n            type = values[0],\r\n            id = values[1];\r\n\r\n        let recipient = this.findRecipient(type, id);\r\n\r\n        this.props.selected().add(value, recipient);\r\n\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * Removes a recipient.\r\n     *\r\n     * @param recipient\r\n     */\r\n    removeRecipient(recipient) {\r\n        let type;\r\n\r\n        if (recipient instanceof User) {\r\n            type = 'users';\r\n        }\r\n        if (recipient instanceof Group) {\r\n            type = 'groups';\r\n        }\r\n\r\n        this.props.selected().remove(type + \":\" + recipient.id());\r\n\r\n        m.redraw();\r\n    }\r\n\r\n    /**\r\n     * Loads a recipient from the global store.\r\n     *\r\n     * @param store\r\n     * @param id\r\n     * @returns {Model}\r\n     */\r\n    findRecipient(store, id) {\r\n        return app.store.getById(store, id);\r\n    }\r\n}\r\n","import Modal from \"flarum/components/Modal\";\r\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\r\nimport Button from \"flarum/components/Button\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\nimport RecipientSearch from \"./RecipientSearch\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\n\r\nexport default class AddRecipientModal extends Modal {\r\n    init() {\r\n        super.init();\r\n\r\n        this.selected = m.prop(new ItemList);\r\n\r\n        if (this.props.discussion) {\r\n            // Adds recipients of the currently viewed discussion.\r\n            this.assignInitialRecipients(this.props.discussion);\r\n        } else if (this.props.selectedRecipients.toArray().length > 0) {\r\n            // Adds previously selected recipients.\r\n            this.selected().merge(this.props.selectedRecipients);\r\n        } else {\r\n            // Adds the current user in case there are no selected recipients yet and this is a new discussion.\r\n            this.selected().add(\"users:\" + app.session.user.id(), app.session.user);\r\n        }\r\n\r\n        this.recipientSearch = RecipientSearch.component({\r\n            selected: this.selected,\r\n            discussion: this.props.discussion\r\n        });\r\n    }\r\n\r\n    assignInitialRecipients(discussion) {\r\n        discussion.recipientUsers().map(user => {\r\n            this.selected().add(\"users:\" + user.id(), user);\r\n        });\r\n        discussion.recipientGroups().map(group => {\r\n            this.selected().add(\"groups:\" + group.id(), group);\r\n        });\r\n    }\r\n\r\n    className() {\r\n        return 'AddRecipientModal';\r\n    }\r\n\r\n    title() {\r\n        return this.props.discussion\r\n            ? app.translator.trans('fof-byobu.forum.modal.titles.update_recipients', {title: <em>{this.props.discussion.title()}</em>})\r\n            : app.translator.trans('fof-byobu.forum.modal.titles.add_recipients');\r\n    }\r\n\r\n    content() {\r\n\r\n        return [\r\n            <div className=\"Modal-body\">\r\n                <div className=\"AddRecipientModal-form\">\r\n                    {this.recipientSearch}\r\n                    <div className=\"AddRecipientModal-form-submit App-primaryControl\">\r\n                        {Button.component({\r\n                            type: 'submit',\r\n                            className: 'Button Button--primary',\r\n                            disabled: false,\r\n                            icon: 'fas fa-check',\r\n                            children: app.translator.trans('fof-byobu.forum.buttons.submit')\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ];\r\n    }\r\n\r\n    select(e) {\r\n        // Ctrl + Enter submits the selection, just Enter completes the current entry\r\n        if (e.metaKey || e.ctrlKey || this.selected.indexOf(this.index) !== -1) {\r\n            if (this.selected().length) {\r\n                this.$('form').submit();\r\n            }\r\n        }\r\n    }\r\n\r\n    onsubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const discussion = this.props.discussion;\r\n        const recipients = this.selected();\r\n\r\n        let recipientGroups = [];\r\n        let recipientUsers = [];\r\n\r\n        recipients.toArray().forEach(recipient => {\r\n            if (recipient instanceof User) {\r\n                recipientUsers.push(recipient);\r\n            }\r\n            if (recipient instanceof Group) {\r\n                recipientGroups.push(recipient);\r\n            }\r\n        });\r\n\r\n        // Recipients are updated here for existing discussions here.\r\n        if (discussion) {\r\n            discussion.save({relationships: {recipientUsers, recipientGroups}})\r\n                .then(() => {\r\n                    if (app.current instanceof DiscussionPage) {\r\n                        app.current.stream.update();\r\n                    }\r\n                    m.redraw();\r\n                });\r\n        }\r\n\r\n        // Use the onsubmit callback to trigger an update in the DiscussionComposer\r\n        if (this.props.onsubmit) this.props.onsubmit(recipients);\r\n\r\n        app.modal.close();\r\n\r\n        m.redraw.strategy('none');\r\n    }\r\n}\r\n","export default function recipientCountLabel(count, attrs = {}) {\r\n  attrs.style = attrs.style || {};\r\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\r\n\r\n  var label = app.translator.transChoice('fof-byobu.forum.labels.recipients', count, {count});\r\n\r\n  return (\r\n    m('span', attrs,\r\n        <span className=\"RecipientLabel-text\">\r\n            {label}\r\n        </span>\r\n    )\r\n  );\r\n}\r\n","import {extend, override} from \"flarum/extend\";\r\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\r\nimport AddRecipientModal from \"./components/AddRecipientModal\";\r\nimport recipientCountLabel from \"../common/helpers/recipientCountLabel\";\r\nimport User from \"flarum/models/User\";\r\nimport Group from \"flarum/models/Group\";\r\nimport ItemList from \"flarum/utils/ItemList\";\r\n\r\nexport default function (app) {\r\n    // Add recipient-selection abilities to the discussion composer.\r\n    DiscussionComposer.prototype.recipients = new ItemList;\r\n    DiscussionComposer.prototype.recipientUsers = [];\r\n    DiscussionComposer.prototype.recipientGroups = [];\r\n\r\n    // Add a recipient selection modal when clicking the recipient tag label.\r\n    DiscussionComposer.prototype.chooseRecipients = function () {\r\n        app.modal.show(\r\n            new AddRecipientModal({\r\n                selectedRecipients: this.recipients,\r\n                onsubmit: (recipients) => {\r\n                    this.recipients = recipients;\r\n\r\n                    // Focus on recipient autocomplete field.\r\n                    this.$('.RecipientsInput').focus();\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    // Add a tag-selection menu to the discussion composer's header, after the\r\n    // title.\r\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\r\n        if (app.session.user && app.forum.attribute('canStartPrivateDiscussion')) {\r\n\r\n            const recipients = this.recipients.toArray();\r\n\r\n            items.add('recipients', (\r\n                <a className=\"DiscussionComposer-changeRecipients\"\r\n                   onclick={this.chooseRecipients.bind(this)}>\r\n                    {recipients.length\r\n                        ? recipientCountLabel(recipients.length)\r\n                        : <span className=\"RecipientLabel none\">{app.translator.trans('fof-byobu.forum.buttons.add_recipients')}</span>}\r\n                </a>\r\n            ), 5);\r\n        }\r\n    });\r\n\r\n    // Add the selected tags as data to submit to the server.\r\n    extend(DiscussionComposer.prototype, 'data', function (data) {\r\n        const users = [];\r\n        const groups = [];\r\n        this.recipients.toArray().forEach(recipient => {\r\n\r\n            if (recipient instanceof User) {\r\n                users.push(recipient);\r\n            }\r\n\r\n            if (recipient instanceof Group) {\r\n                groups.push(recipient);\r\n            }\r\n        });\r\n\r\n        data.relationships = data.relationships || {};\r\n\r\n        if (users.length) {\r\n            data.relationships.recipientUsers = users;\r\n        }\r\n\r\n        if (groups.length) {\r\n            data.relationships.recipientGroups = groups;\r\n        }\r\n    });\r\n}\r\n","import extract from 'flarum/utils/extract';\r\nimport recipientLabel from './recipientLabel';\r\n\r\nexport default function recipientsLabel(recipients, attrs = {}) {\r\n  const children = [];\r\n  const link = extract(attrs, 'link');\r\n\r\n  attrs.className = 'RecipientsLabel ' + (attrs.className || '');\r\n\r\n  if (recipients) {\r\n      recipients.forEach(recipient => {\r\n          children.push(recipientLabel(recipient, {link}));\r\n      });\r\n  } else {\r\n    children.push(recipientLabel());\r\n  }\r\n\r\n  return <span {...attrs}>{children}</span>;\r\n}\r\n","import {extend} from \"flarum/extend\";\r\nimport DiscussionListItem from \"flarum/components/DiscussionListItem\";\r\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\r\nimport DiscussionHero from \"flarum/components/DiscussionHero\";\r\nimport DiscussionList from \"flarum/components/DiscussionList\";\r\nimport recipientsLabel from \"../common/helpers/recipientsLabel\";\r\n\r\nexport default function() {\r\n\r\n    const addToDiscussion = function(discussion, items, long) {\r\n        let recipients = [];\r\n\r\n        if (discussion.recipientUsers().length) {\r\n            recipients = recipients.concat(discussion.recipientUsers());\r\n        }\r\n\r\n        if (discussion.recipientGroups().length) {\r\n            recipients = recipients.concat(discussion.recipientGroups());\r\n        }\r\n\r\n        if (recipients && recipients.length) {\r\n            if (long) {\r\n                items.add('recipients', recipientsLabel(recipients), 10);\r\n            } else {\r\n                items.add('recipients', recipientsLabel(recipients, {link: true}), 4);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds User labels on the discussion index page.\r\n     */\r\n    extend(DiscussionListItem.prototype, 'infoItems', function(items) {\r\n        const discussion = this.props.discussion;\r\n\r\n        addToDiscussion(discussion, items, true);\r\n    });\r\n\r\n    /**\r\n     * Require recipients from the API whenever we're loading a Discussion page.\r\n     */\r\n    extend(DiscussionPage.prototype, 'params', function(params) {\r\n        params.include.push('recipientUsers');\r\n        params.include.push('recipientGroups');\r\n    });\r\n    extend(DiscussionList.prototype, 'requestParams', function(params) {\r\n        params.include.push('recipientUsers');\r\n        params.include.push('recipientGroups');\r\n    });\r\n\r\n\r\n    /**\r\n     * Adds User labels on the discussion Hero.\r\n     */\r\n    extend(DiscussionHero.prototype, 'items', function(items) {\r\n        const discussion = this.props.discussion;\r\n\r\n        addToDiscussion(discussion, items, false);\r\n    });\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport Button from 'flarum/components/Button';\r\n\r\nimport AddRecipientModal from './components/AddRecipientModal';\r\n\r\nexport default function() {\r\n    // Add a control allowing the discussion to be moved to another category.\r\n    extend(DiscussionControls, 'moderationControls', function(items, discussion) {\r\n        if (discussion.canEditRecipients()) {\r\n            items.add('recipients', Button.component({\r\n                children: app.translator.trans('fof-byobu.forum.buttons.edit_recipients'),\r\n                icon: 'far fa-map',\r\n                onclick: () => app.modal.show(new AddRecipientModal({discussion}))\r\n            }));\r\n        }\r\n    });\r\n}\r\n","import {extend} from \"flarum/extend\";\r\nimport Discussion from \"flarum/models/Discussion\";\r\nimport Badge from \"flarum/components/Badge\";\r\n\r\nexport default function addHasRecipientsBadge() {\r\n    extend(Discussion.prototype, 'badges', function (badges) {\r\n        if (this.recipientUsers().length || this.recipientGroups().length) {\r\n            badges.add('private', Badge.component({\r\n                type: 'private',\r\n                label: app.translator.trans('fof-byobu.forum.badges.is_private.tooltip'),\r\n                icon: 'fas fa-map'\r\n            }), 10);\r\n        }\r\n    });\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport UserControls from 'flarum/utils/UserControls';\r\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\r\nimport Button from 'flarum/components/Button';\r\nimport ItemList from 'flarum/utils/ItemList';\r\n\r\nexport default function () {\r\n    // Add a control allowing the discussion to be moved to another category.\r\n    extend(UserControls, 'userControls', function (items, user) {\r\n        if (app.session.user &&\r\n            app.session.user.id() !== user.id() &&\r\n            app.forum.attribute('canStartPrivateDiscussion') &&\r\n            ((user.blocksPd() === false || app.forum.attribute('canStartPrivateDiscussionWithBlockers')) && !user.cannotBeDirectMessaged())\r\n        ) {\r\n            items.add('private-discussion', Button.component({\r\n                children: app.translator.trans('fof-byobu.forum.buttons.send_pd', {username: user.username()}),\r\n                icon: 'far fa-map',\r\n                onclick: () => {\r\n                    const deferred = m.deferred();\r\n\r\n                    let recipients = new ItemList();\r\n                    recipients.add('users:' + user.id(), user);\r\n                    recipients.add('users:' + app.session.user.id(), app.session.user);\r\n\r\n                    DiscussionComposer.prototype.recipients = recipients;\r\n\r\n                    const component = new DiscussionComposer({\r\n                        user: app.session.user,\r\n                        recipients: recipients,\r\n                        recipientUsers: recipients\r\n                    });\r\n\r\n                    app.composer.load(component);\r\n                    app.composer.show();\r\n\r\n                    deferred.resolve(component);\r\n\r\n                    return deferred.promise;\r\n                }\r\n            }));\r\n        }\r\n\r\n        return items;\r\n    });\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport SettingsPage from 'flarum/components/SettingsPage';\r\nimport Switch from \"flarum/components/Switch\";\r\n\r\nexport default function () {\r\n    extend(SettingsPage.prototype, 'privacyItems', function (items) {\r\n        items.add('byobu-block-dm',\r\n            Switch.component({\r\n                children: app.translator.trans('fof-byobu.forum.user.settings.block_pd'),\r\n                state: this.user.preferences().blocksPd,\r\n                onchange: (value, component) => this.preferenceSaver('blocksPd')(value, component)\r\n            })\r\n        )\r\n    });\r\n}\r\n","import DiscussionList from 'flarum/components/DiscussionList';\r\n\r\nexport default class PrivateDiscussionList extends DiscussionList\r\n{\r\n}\r\n","import UserPage from 'flarum/components/UserPage';\r\nimport PrivateDiscussionList from './PrivateDiscussionList';\r\n\r\nexport default class PrivateDiscussionsUserPage extends UserPage {\r\n    init() {\r\n        super.init();\r\n\r\n        this.loadUser(m.route.param('username'));\r\n\r\n        this.list = new PrivateDiscussionList({\r\n            params: {\r\n                q: `byobu:${this.user.username()} is:private`,\r\n                sort: 'newest'\r\n            }\r\n        });\r\n\r\n        this.list.refresh();\r\n    }\r\n\r\n    content() {\r\n        return (\r\n            <div className=\"DiscussionsUserPage\">\r\n                {this.list.render()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import {extend} from 'flarum/extend';\r\nimport UserPage from 'flarum/components/UserPage';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\n\r\nimport PrivateDiscussionsUserPage from \"./components/PrivateDiscussionsUserPage\";\r\n\r\nexport default function () {\r\n    if (!Number(app.data['fof-byobu.enable_byobu_user_page'])) return;\r\n\r\n    app.routes['user.byobu'] = {path: '/u/:username/byobu', component: PrivateDiscussionsUserPage.component()};\r\n\r\n    extend(UserPage.prototype, 'navItems', function (items) {\r\n        items.add('byobu',\r\n            LinkButton.component({\r\n                href: app.route('user.byobu', {username: this.user.username()}),\r\n                children: app.translator.trans('fof-byobu.forum.user.byobu_link'),\r\n                icon: 'fas fa-map'\r\n            }),\r\n            85\r\n        );\r\n    })\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport Page from 'flarum/components/Page';\r\nimport ItemList from 'flarum/utils/ItemList';\r\nimport listItems from 'flarum/helpers/listItems';\r\nimport icon from 'flarum/helpers/icon';\r\nimport PrivateDiscussionList from './PrivateDiscussionList';\r\nimport WelcomeHero from 'flarum/components/WelcomeHero';\r\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\r\nimport LogInModal from 'flarum/components/LogInModal';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\nimport Select from 'flarum/components/Select';\r\nimport Button from 'flarum/components/Button';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\nimport SelectDropdown from 'flarum/components/SelectDropdown';\r\n\r\nexport default class PrivateDiscussionIndex extends Page\r\n{\r\n    init() {\r\n        super.init();\r\n\r\n        // If the user is returning from a discussion page, then take note of which\r\n        // discussion they have just visited. After the view is rendered, we will\r\n        // scroll down so that this discussion is in view.\r\n        if (app.previous instanceof DiscussionPage) {\r\n            this.lastDiscussion = app.previous.discussion;\r\n        }\r\n\r\n        // If the user is coming from the discussion list, then they have either\r\n        // just switched one of the parameters (filter, sort, search) or they\r\n        // probably want to refresh the results. We will clear the discussion list\r\n        // cache so that results are reloaded.\r\n        if (app.previous instanceof PrivateDiscussionIndex) {\r\n            app.cache.privateDiscussionList = null;\r\n        }\r\n\r\n        const params = this.params();\r\n\r\n        if (app.cache.privateDiscussionList) {\r\n            // Compare the requested parameters (sort, search query) to the ones that\r\n            // are currently present in the cached discussion list. If they differ, we\r\n            // will clear the cache and set up a new discussion list component with\r\n            // the new parameters.\r\n            Object.keys(params).some(key => {\r\n                if (app.cache.privateDiscussionList.props.params[key] !== params[key]) {\r\n                    app.cache.privateDiscussionList = null;\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (!app.cache.privateDiscussionList) {\r\n            app.cache.privateDiscussionList = new PrivateDiscussionList({params});\r\n        }\r\n\r\n        app.history.push('private-index', icon('far fa-map'));\r\n\r\n        this.bodyClass = 'App--index';\r\n    }\r\n\r\n    onunload() {\r\n        // Save the scroll position so we can restore it when we return to the\r\n        // discussion list.\r\n        app.cache.scrollTop = $(window).scrollTop();\r\n    }\r\n\r\n    view() {\r\n        return (\r\n            <div className=\"IndexPage\">\r\n                {this.hero()}\r\n                <div className=\"container\">\r\n                    <nav className=\"IndexPage-nav sideNav\">\r\n                        <ul>{listItems(this.sidebarItems().toArray())}</ul>\r\n                    </nav>\r\n                    <div className=\"IndexPage-results sideNavOffset\">\r\n                        <div className=\"IndexPage-toolbar\">\r\n                            <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\r\n                            <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\r\n                        </div>\r\n                        {app.cache.discussionList.render()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    config(isInitialized, context) {\r\n        super.config(...arguments);\r\n\r\n        if (isInitialized) return;\r\n\r\n        extend(context, 'onunload', () => $('#app').css('min-height', ''));\r\n\r\n        app.setTitle('');\r\n        app.setTitleCount(0);\r\n\r\n        // Work out the difference between the height of this hero and that of the\r\n        // previous hero. Maintain the same scroll position relative to the bottom\r\n        // of the hero so that the sidebar doesn't jump around.\r\n        const oldHeroHeight = app.cache.heroHeight;\r\n        const heroHeight = app.cache.heroHeight = this.$('.Hero').outerHeight();\r\n        const scrollTop = app.cache.scrollTop;\r\n\r\n        $('#app').css('min-height', $(window).height() + heroHeight);\r\n\r\n        // Scroll to the remembered position. We do this after a short delay so that\r\n        // it happens after the browser has done its own \"back button\" scrolling,\r\n        // which isn't right. https://github.com/flarum/core/issues/835\r\n        const scroll = () => $(window).scrollTop(scrollTop - oldHeroHeight + heroHeight);\r\n        scroll();\r\n        setTimeout(scroll, 1);\r\n\r\n        // If we've just returned from a discussion page, then the constructor will\r\n        // have set the `lastDiscussion` property. If this is the case, we want to\r\n        // scroll down to that discussion so that it's in view.\r\n        if (this.lastDiscussion) {\r\n            const $discussion = this.$(`.DiscussionListItem[data-id=\"${this.lastDiscussion.id()}\"]`);\r\n\r\n            if ($discussion.length) {\r\n                const indexTop = $('#header').outerHeight();\r\n                const indexBottom = $(window).height();\r\n                const discussionTop = $discussion.offset().top;\r\n                const discussionBottom = discussionTop + $discussion.outerHeight();\r\n\r\n                if (discussionTop < scrollTop + indexTop || discussionBottom > scrollTop + indexBottom) {\r\n                    $(window).scrollTop(discussionTop - indexTop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the component to display as the hero.\r\n     *\r\n     * @return {MithrilComponent}\r\n     */\r\n    hero() {\r\n        return WelcomeHero.component();\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the sidebar of the index page. By default this is a\r\n     * \"New Discussion\" button, and then a DropdownSelect component containing a\r\n     * list of navigation items.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    sidebarItems() {\r\n        const items = new ItemList();\r\n        const canStartDiscussion = app.forum.attribute('canStartDiscussion') || !app.session.user;\r\n\r\n        items.add('newDiscussion',\r\n            Button.component({\r\n                children: app.translator.trans(canStartDiscussion ? 'core.forum.index.start_discussion_button' : 'core.forum.index.cannot_start_discussion_button'),\r\n                icon: 'fas fa-edit',\r\n                className: 'Button Button--primary IndexPage-newDiscussion',\r\n                itemClassName: 'App-primaryControl',\r\n                onclick: this.newDiscussion.bind(this),\r\n                disabled: !canStartDiscussion\r\n            })\r\n        );\r\n\r\n        items.add('nav',\r\n            SelectDropdown.component({\r\n                children: this.navItems(this).toArray(),\r\n                buttonClassName: 'Button',\r\n                className: 'App-titleControl'\r\n            })\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the navigation in the sidebar of the index page. By\r\n     * default this is just the 'All Discussions' link.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    navItems() {\r\n        const items = new ItemList();\r\n        const params = this.stickyParams();\r\n\r\n        items.add('allDiscussions',\r\n            LinkButton.component({\r\n                href: app.route('index', params),\r\n                children: app.translator.trans('core.forum.index.all_discussions_link'),\r\n                icon: 'far fa-comments'\r\n            }),\r\n            100\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the part of the toolbar which is concerned with how\r\n     * the results are displayed. By default this is just a select box to change\r\n     * the way discussions are sorted.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    viewItems() {\r\n        const items = new ItemList();\r\n        const sortMap = app.cache.discussionList.sortMap();\r\n\r\n        const sortOptions = {};\r\n        for (const i in sortMap) {\r\n            sortOptions[i] = app.translator.trans('core.forum.index_sort.' + i + '_button');\r\n        }\r\n\r\n        items.add('sort',\r\n            Select.component({\r\n                options: sortOptions,\r\n                value: this.params().sort || Object.keys(sortMap)[0],\r\n                onchange: this.changeSort.bind(this)\r\n            })\r\n        );\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Build an item list for the part of the toolbar which is about taking action\r\n     * on the results. By default this is just a \"mark all as read\" button.\r\n     *\r\n     * @return {ItemList}\r\n     */\r\n    actionItems() {\r\n        const items = new ItemList();\r\n\r\n        items.add('refresh',\r\n            Button.component({\r\n                title: app.translator.trans('core.forum.index.refresh_tooltip'),\r\n                icon: 'fas fa-refresh',\r\n                className: 'Button Button--icon',\r\n                onclick: () => app.cache.discussionList.refresh()\r\n            })\r\n        );\r\n\r\n        if (app.session.user) {\r\n            items.add('markAllAsRead',\r\n                Button.component({\r\n                    title: app.translator.trans('core.forum.index.mark_all_as_read_tooltip'),\r\n                    icon: 'fas fa-check',\r\n                    className: 'Button Button--icon',\r\n                    onclick: this.markAllAsRead.bind(this)\r\n                })\r\n            );\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Return the current search query, if any. This is implemented to activate\r\n     * the search box in the header.\r\n     *\r\n     * @see Search\r\n     * @return {String}\r\n     */\r\n    searching() {\r\n        return this.params().q;\r\n    }\r\n\r\n    /**\r\n     * Redirect to the index page without a search filter. This is called when the\r\n     * 'x' is clicked in the search box in the header.\r\n     *\r\n     * @see Search\r\n     */\r\n    clearSearch() {\r\n        const params = this.params();\r\n        delete params.q;\r\n\r\n        m.route(app.route(this.props.routeName, params));\r\n    }\r\n\r\n    /**\r\n     * Redirect to the index page using the given sort parameter.\r\n     *\r\n     * @param {String} sort\r\n     */\r\n    changeSort(sort) {\r\n        const params = this.params();\r\n\r\n        if (sort === Object.keys(app.cache.discussionList.sortMap())[0]) {\r\n            delete params.sort;\r\n        } else {\r\n            params.sort = sort;\r\n        }\r\n\r\n        m.route(app.route(this.props.routeName, params));\r\n    }\r\n\r\n    /**\r\n     * Get URL parameters that stick between filter changes.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    stickyParams() {\r\n        return {\r\n            sort: m.route.param('sort'),\r\n            q: m.route.param('q')\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get parameters to pass to the DiscussionList component.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    params() {\r\n        const params = this.stickyParams();\r\n\r\n        params.filter = m.route.param('filter');\r\n\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * Log the user in and then open the composer for a new discussion.\r\n     *\r\n     * @return {Promise}\r\n     */\r\n    newDiscussion() {\r\n        const deferred = m.deferred();\r\n\r\n        if (app.session.user) {\r\n            this.composeNewDiscussion(deferred);\r\n        } else {\r\n            app.modal.show(\r\n                new LogInModal({\r\n                    onlogin: this.composeNewDiscussion.bind(this, deferred)\r\n                })\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Initialize the composer for a new discussion.\r\n     *\r\n     * @param {Deferred} deferred\r\n     * @return {Promise}\r\n     */\r\n    composeNewDiscussion(deferred) {\r\n        const component = new DiscussionComposer({user: app.session.user});\r\n\r\n        app.composer.load(component);\r\n        app.composer.show();\r\n\r\n        deferred.resolve(component);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Mark all discussions as read.\r\n     *\r\n     * @return void\r\n     */\r\n    markAllAsRead() {\r\n        const confirmation = confirm(app.translator.trans('core.forum.index.mark_all_as_read_confirmation'));\r\n\r\n        if (confirmation) {\r\n            app.session.user.save({readTime: new Date()});\r\n        }\r\n    }\r\n}\r\n","import EventPost from \"flarum/components/EventPost\";\r\nimport recipientsLabel from \"../../common/helpers/recipientsLabel\";\r\n\r\nexport default class RecipientsModified extends EventPost {\r\n    static initProps(props) {\r\n        super.initProps(props);\r\n\r\n        function diff(diff1, diff2, store) {\r\n            return diff1\r\n                .filter(item => diff2.indexOf(item) === -1)\r\n                .map(id => app.store.getById(store, id));\r\n        }\r\n\r\n        const content = props.post.content();\r\n\r\n        // For event posts existing before groups functionality.\r\n        if (!content['new'] && content.length == 2) {\r\n            const oldRecipients = props.post.content()[0];\r\n            const newRecipients = props.post.content()[1];\r\n            props.added = diff(newRecipients, oldRecipients, 'users');\r\n            props.removed = diff(oldRecipients, newRecipients, 'users');\r\n        } else {\r\n            var usersAdded = diff(content['new']['users'], content['old']['users'], 'users');\r\n            var usersRemoved = diff(content['old']['users'], content['new']['users'], 'users');\r\n            var groupsAdded = diff(content['new']['groups'], content['old']['groups'], 'groups');\r\n            var groupsRemoved = diff(content['old']['groups'], content['new']['groups'], 'groups');\r\n\r\n            props.added = usersAdded.concat(groupsAdded);\r\n            props.removed = usersRemoved.concat(groupsRemoved);\r\n        }\r\n    }\r\n\r\n    icon() {\r\n        return 'far fa-map';\r\n    }\r\n\r\n    descriptionKey() {\r\n\r\n        var localeBase = 'fof-byobu.forum.post.recipients_modified.';\r\n\r\n        if (this.props.added.length) {\r\n            if (this.props.removed.length) {\r\n                return localeBase + 'added_and_removed';\r\n            }\r\n\r\n            return localeBase + 'added';\r\n        }\r\n\r\n        return localeBase + 'removed';\r\n    }\r\n\r\n    descriptionData() {\r\n        const data = {};\r\n\r\n        if (this.props.added.length) {\r\n            data.added = recipientsLabel(this.props.added, {link: true});\r\n        }\r\n\r\n        if (this.props.removed.length) {\r\n            data.removed = recipientsLabel(this.props.removed, {link: true});\r\n        }\r\n\r\n        return data;\r\n    }\r\n}\r\n","import Model from \"flarum/Model\";\r\nimport Discussion from \"flarum/models/Discussion\";\r\nimport User from \"flarum/models/User\";\r\nimport addRecipientComposer from \"./addRecipientComposer\";\r\nimport addRecipientLabels from \"./addRecipientLabels\";\r\nimport addRecipientsControl from \"./addRecipientsControl\";\r\nimport addHasRecipientsBadge from \"./addHasRecipientsBadge\";\r\nimport addDiscussPrivatelyControl from './addDiscussPrivatelyControl';\r\nimport addPrivacySetting from './addPrivacySetting';\r\nimport addPrivateDiscussionsPage from \"./addPrivateDiscussionsPage\";\r\n\r\nimport PrivateDiscussionIndex from \"./components/PrivateDiscussionIndex\";\r\nimport RecipientsModified from \"./components/RecipientsModified\";\r\n\r\napp.initializers.add('fof-byobu', function(app) {\r\n    app.routes.private_discussions = {path: '/private-discussions', component: PrivateDiscussionIndex.component()};\r\n\r\n    Discussion.prototype.recipientUsers = Model.hasMany('recipientUsers');\r\n    Discussion.prototype.oldRecipientUsers = Model.hasMany('oldRecipientUsers');\r\n    Discussion.prototype.recipientGroups = Model.hasMany('recipientGroups');\r\n    Discussion.prototype.oldRecipientGroups = Model.hasMany('oldRecipientGroups');\r\n\r\n    Discussion.prototype.canEditRecipients = Model.attribute('canEditRecipients');\r\n    Discussion.prototype.canEditUserRecipients = Model.attribute('canEditUserRecipients');\r\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\r\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\r\n\r\n    User.prototype.blocksPd = Model.attribute('blocksPd');\r\n    User.prototype.cannotBeDirectMessaged = Model.attribute('cannotBeDirectMessaged');\r\n\r\n    app.postComponents.recipientsModified = RecipientsModified;\r\n\r\n    addRecipientComposer(app);\r\n    addRecipientLabels();\r\n    addRecipientsControl();\r\n    addHasRecipientsBadge();\r\n    addPrivacySetting();\r\n\r\n    addDiscussPrivatelyControl();\r\n\r\n    addPrivateDiscussionsPage();\r\n});\r\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Search'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/WelcomeHero'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['components/EventPost'];"],"sourceRoot":""}